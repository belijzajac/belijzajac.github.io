<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>rust on belijzajac.dev</title><link>https://belijzajac.dev/tags/rust/</link><description>Recent content in rust on belijzajac.dev</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sat, 27 May 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://belijzajac.dev/tags/rust/index.xml" rel="self" type="application/rss+xml"/><item><title>Proto-Danksharding: Speeding Up Blobs Verification</title><link>https://belijzajac.dev/proto-danksharding-speeding-up-blobs-verification/</link><pubDate>Sat, 27 May 2023 00:00:00 +0000</pubDate><guid>https://belijzajac.dev/proto-danksharding-speeding-up-blobs-verification/</guid><description>Introduction The Ethereum Foundation proposed EIP-4844 on February 25, 2022, with the objective of reducing gas fees. It introduces a new transaction type called &amp;ldquo;blob&amp;rdquo;, which is temporarily stored and committed using the KZG commitment scheme. In addition, the Ethereum Foundation developed a project called c-kzg-4844, which provides a minimal implementation of the polynomial commitments API written in C. This project does not use parallelization and exposes its C API for bindings in different programming languages.</description></item><item><title>WisniaLang: Compiler Project</title><link>https://belijzajac.dev/wisnialang-compiler-project/</link><pubDate>Mon, 17 Oct 2022 00:00:00 +0000</pubDate><guid>https://belijzajac.dev/wisnialang-compiler-project/</guid><description>Introduction For the past 3 years, I have been working on the WisniaLang compiler for an experimental programming language that compiles to native machine code. It focuses on delivering tiny Linux binaries (ELF x86_64) with no LLVM dependency. As a result, what it actually competes with is the LLVM toolchain, on which a large number of other programming languages rely extensively.
The reason for focusing on the delivery of small binaries with no LLVM dependency is to offer an alternative to the LLVM toolchain.</description></item><item><title>Outperforming Rayon with OpenMP</title><link>https://belijzajac.dev/outperforming-rayon-with-openmp/</link><pubDate>Tue, 16 Nov 2021 00:00:00 +0000</pubDate><guid>https://belijzajac.dev/outperforming-rayon-with-openmp/</guid><description>Introduction For the Blockchain Technologies course, students were paired into groups and assigned to produce the fastest Rust library (crate) implementing the KZG10 scheme. Two teams used the same backend, that is, blst (implemented in assembly with direct bindings for Rust and C). The first team, blst-from-scratch, was using the said Rust bindings to produce an interface closer to c-kzg, whereas the ckzg team, which I was part of, was responsible for porting the latter over to Rust.</description></item></channel></rss>