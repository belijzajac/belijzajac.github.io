<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>perf on belijzajac.dev</title><link>https://belijzajac.dev/tags/perf/</link><description>Recent content in perf on belijzajac.dev</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Tue, 16 Nov 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://belijzajac.dev/tags/perf/index.xml" rel="self" type="application/rss+xml"/><item><title>Outperforming Rayon with OpenMP</title><link>https://belijzajac.dev/outperforming-rayon-with-openmp/</link><pubDate>Tue, 16 Nov 2021 00:00:00 +0000</pubDate><guid>https://belijzajac.dev/outperforming-rayon-with-openmp/</guid><description>Introduction For the Blockchain Technologies course, students were paired into groups and assigned to produce the fastest Rust library (crate) implementing the KZG10 scheme. Two teams used the same backend, that is, blst (implemented in assembly with direct bindings for Rust and C). The first team, blst-from-scratch, was using the said Rust bindings to produce an interface closer to c-kzg, whereas the ckzg team, which I was part of, was responsible for porting the latter over to Rust.</description></item></channel></rss>